repositories:
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: cortex-helm
    url: https://cortexproject.github.io/cortex-helm-chart
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: vector
    url: https://helm.vector.dev
  - name: coroot
    url: https://coroot.github.io/helm-charts

releases:
  - name: kube-prometheus-stack
    namespace: monitoring
    createNamespace: true
    chart: prometheus-community/kube-prometheus-stack
    values:
      - values/kube-prometheus-stack.yaml
    hooks:
      - name: install-prom-crds
        events: ["prepare"]
        showlogs: true
        command: sh
        args:
          - -c
          - |
            base_url="https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd-full"
            crds=(
              "monitoring.coreos.com_alertmanagerconfigs.yaml"
              "monitoring.coreos.com_alertmanagers.yaml"
              "monitoring.coreos.com_podmonitors.yaml"
              "monitoring.coreos.com_probes.yaml"
              "monitoring.coreos.com_prometheuses.yaml"
              "monitoring.coreos.com_prometheusrules.yaml"
              "monitoring.coreos.com_servicemonitors.yaml"
              "monitoring.coreos.com_thanosrulers.yaml"
            )
            for crd in "${crds[@]}"; do
              echo "Applying $crd"
              kubectl apply --server-side -f "$base_url/$crd"
            done

  - name: cortex
    namespace: cortex
    createNamespace: true
    chart: cortex-helm/cortex
    values:
      - values/cortex.yaml
    set:
      # Requires you to export below envs locally
      - name: config.blocks_storage.s3.access_key_id
        value: {{ requiredEnv "AWS_ACCESS_KEY_ID" }}
      - name: config.blocks_storage.s3.secret_access_key
        value: {{ requiredEnv "AWS_SECRET_ACCESS_KEY" }}
  
  - name: loki
    namespace: loki
    createNamespace: true
    chart: grafana/loki
    values:
      - values/loki.yaml

  - name: vector
    namespace: monitoring
    createNamespace: true
    chart: vector/vector
    values:
      - values/vector.yaml