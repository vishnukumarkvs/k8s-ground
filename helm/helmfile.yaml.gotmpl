repositories:
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: cortex-helm
    url: https://cortexproject.github.io/cortex-helm-chart
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: vector
    url: https://helm.vector.dev
  - name: coroot
    url: https://coroot.github.io/helm-charts
  - name: seaweedfs
    url: https://seaweedfs.github.io/seaweedfs/helm
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
hooks:
  - events: ["prepare"]
    showlogs: true
    command: "sh"
    args: ["-c", "kustomize build ./dashboards | kubectl apply --server-side -f -"]

releases:
  - name: kube-prometheus-stack
    namespace: monitoring
    createNamespace: true
    chart: prometheus-community/kube-prometheus-stack
    values:
      - values/kube-prometheus-stack.yaml
    hooks:
      - name: install-prom-crds
        events: ["prepare"]
        showlogs: true
        command: sh
        args:
          - -c
          - |
            base_url="https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd-full"
            crds=(
              "monitoring.coreos.com_alertmanagerconfigs.yaml"
              "monitoring.coreos.com_alertmanagers.yaml"
              "monitoring.coreos.com_podmonitors.yaml"
              "monitoring.coreos.com_probes.yaml"
              "monitoring.coreos.com_prometheuses.yaml"
              "monitoring.coreos.com_prometheusrules.yaml"
              "monitoring.coreos.com_servicemonitors.yaml"
              "monitoring.coreos.com_thanosrulers.yaml"
            )
            for crd in "${crds[@]}"; do
              echo "Applying $crd"
              kubectl apply --server-side -f "$base_url/$crd"
            done

  - name: cortex
    namespace: cortex
    createNamespace: true
    chart: cortex-helm/cortex
    values:
      - values/cortex.yaml

  # - name: minio
  #   namespace: minio
  #   createNamespace: true
  #   chart: bitnami/minio
  #   values:
  #     - values/minio-bitnami.yaml

  # - name: yacm
  #   namespace: monitoring
  #   createNamespace: true
  #   chart: prometheus-community/prometheus-yet-another-cloudwatch-exporter
  #   values:
  #     - values/yacm.yaml
  #   set:
  #     - name: aws.aws_access_key_id
  #       value: {{ requiredEnv "AWS_ACCESS_KEY_ID" }}
  #     - name: aws.aws_secret_access_key
  #       value: {{ requiredEnv "AWS_SECRET_ACCESS_KEY"}}

  # - name: avalanche-generator
  #   namespace: monitoring
  #   chart: ./avalanche
  #   values:
  #     - values/avalanche.yaml

  # # grfana bela : ebpf based auto instrumentation tool
  # - name: beyla
  #   namespace: monitoring
  #   chart: grafana/beyla
  #   values:
  #     - values/beyla.yaml

  # # kube-prometheus-stack already has ksm
  # - name: kube-state-metrics
  #  namespace: monitoring
  #  createNamespace: true
  #  chart: prometheus-community/kube-state-metrics

  # - name: loki
  #   namespace: loki
  #   createNamespace: true
  #   chart: grafana/loki
  #   values:
  #     - values/loki.yaml

  # - name: vector
  #   namespace: monitoring
  #   createNamespace: true
  #   chart: vector/vector
  #   values:
  #     - values/vector.yaml

  # - name: seaweedfs
  #   namespace: seaweedfs
  #   createNamespace: true
  #   chart: seaweedfs/seaweedfs
  #   values:
  #     - values/seaweedfs.yaml

  - name: keycloak
    namespace: keycloak
    createNamespace: true
    chart: bitnami/keycloak
    values:
      - values/keycloak.yaml
